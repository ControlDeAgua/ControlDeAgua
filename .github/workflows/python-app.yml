# Based on the `python-app.yml` template from GitHub actions:
# https://github.com/actions/starter-workflows/blob/main/ci/python-app.yml
#
# Adapted by Diego Ramirez.

name: Python application tests

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  build:

    runs-on: windows-latest # remember that ControlDeAgua is built for Windows only!
    strategy:
      matrix:
        python-version: [ 3.8, 3.9 ]

    steps:
    - uses: actions/checkout@v2
    - name: Set up Python ${{matrix.python-version}}
      uses: actions/setup-python@v2
      with:
        python-version: ${{matrix.python-version}}
    - name: Display Python version
      run: python -c "import sys; print(sys.version)"
    - name: Install pip dependencies
      run: |
        python -m pip install --upgrade pip setuptools
        pip install flake8 
        pip install -r requirements.txt
    - name: DiddiParser product check
      run: |
        # use diddiparser (from requirements.txt) to retrieve product data
        cd .ramz
        python -m diddiparser ramz.diddi --is-setup
        cd ..
    - name: Lint with flake8
      run: |
        # stop the build if there are Python syntax errors or undefined names
        flake8 . --count --select=E9,F63,F7,F82 --show-source --statistics
        # exit-zero treats all errors as warnings. The GitHub editor is 127 chars wide
        flake8 . --count --exit-zero --max-complexity=10 --max-line-length=127 --statistics
    - name: Finalize the test
      run: python -c "print('Process completed!')"
